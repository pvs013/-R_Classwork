xlab="Global Active Power (kilowatts)")
#Close Graphics Device
dev.off()
power_data <- read.table(file, header=TRUE, sep=";", na.strings="?")
## subset the data needed - in DD/MM/YYYY format
power_data <- power_data[power_data$Date %in% c("1/2/2007","2/2/2007"),]
## Convert Date and Time columns to correct classes
power_data$Date <- as.Date(power_data$Date, format="%d/%m/%Y")
power_data$Time <- strptime(power_data$Time, format="%H;%M:%S")
# Open Graphics Device - png file 480x480
png(filename = "plot1.png", width = 480, height = 480)
## Draw histogram - Plot 1
hist(power_data$Global_active_power, col="red", main="Global Active Power",
xlab="Global Active Power (kilowatts)")
#Close Graphics Device
dev.off()
hist(power_data$Global_active_power, col="red", main="Global Active Power",
xlab="Global Active Power (kilowatts)")
?barplot
?plot
power_data$DateTime <- paste(power_data$Date, power_data$Time)
power_data$DateTime <- strptime(power_data$DateTime, format = "%Y-%m-%d %H:%M:%S")
class(power_data$DateTime)
plot(power_data$DateTime, power_data$Global_active_power, type=l)
power_data$DataTime
power_data$DateTime
power_data$DateTime <- paste(power_data$Date, power_data$Time)
power_data$DateTime
power_data$Time
power_data <- read.table(file, header=TRUE, sep=";", na.strings="?")
## subset the data needed - in DD/MM/YYYY format
power_data <- power_data[power_data$Date %in% c("1/2/2007","2/2/2007"),]
## Convert Date and Time columns to correct classes
power_data$Date <- as.Date(power_data$Date, format="%d/%m/%Y")
power_data$Date
power_data$Time
power_data$Time2 <- strptime(power_data$Time, format="%H:%M:%S")
power_data$Time2
power_data <- read.table(file, header=TRUE, sep=";", na.strings="?")
## subset the data needed - in DD/MM/YYYY format
power_data <- power_data[power_data$Date %in% c("1/2/2007","2/2/2007"),]
power_data$DateTime <- paste(power_data$Date, power_data$Time)
power_data$DateTime
power_data$DateTime <- strptime(power_data$DateTime, format = "%d/%m/%Y %H:%M:%S")
power_data$DateTime
plot(power_data$DateTime, power_data$Global_active_power, type=l)
plot(power_data$DateTime, power_data$Global_active_power, type=l)
plot(power_data$DateTime, power_data$Global_active_power, type=n)
?lines
plot(power_data$DateTime, power_data$Global_active_power, type=n)
plot(power_data$DateTime, power_data$Global_active_power, type="n")
lines(power_data$DateTime, power_data$Global_active_power, type="l")
plot(power_data$DateTime, power_data$Global_active_power, type="l")
plot(power_data$DateTime, power_data$Global_active_power, type="l",
ylab="Global Active Power (kilowatts)", xlab="")
png(filename = "plot2.png", width = 480, height = 480)
## Draw Plot 2
plot(power_data$DateTime, power_data$Global_active_power, type="l",
ylab="Global Active Power (kilowatts)", xlab="")
#Close Graphics Device
dev.off()
plot(power_data$DateTime, power_data$Sub_metering_1, type="n",
ylab="Energy sub metering", xlab="")
points(power_data$DateTime, power_data$Sub_metering_1, color="black")
points(power_data$DateTime, power_data$Sub_metering_2, color="red")
points(power_data$DateTime, power_data$Sub_metering_3, color="blue")
plot(power_data$DateTime, power_data$Sub_metering_1, type="n",
ylab="Energy sub metering", xlab="")
points(power_data$DateTime, power_data$Sub_metering_1, type="l", col="black")
points(power_data$DateTime, power_data$Sub_metering_2, type="l", col="red")
points(power_data$DateTime, power_data$Sub_metering_3, type="l", col="blue")
legend("topright", col= c("black","red","blue"),
legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_2"))
?legend
legend("topright", lwy = 2, col= c("black","red","blue"),
legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_2"))
legend("topright", lwd = 2, col= c("black","red","blue"),
legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_2"))
png(filename = "plot3.png", width = 480, height = 480)
## Draw Plot 3
plot(power_data$DateTime, power_data$Sub_metering_1, type="n",
ylab="Energy sub metering", xlab="")
points(power_data$DateTime, power_data$Sub_metering_1, type="l", col="black")
points(power_data$DateTime, power_data$Sub_metering_2, type="l", col="red")
points(power_data$DateTime, power_data$Sub_metering_3, type="l", col="blue")
legend("topright", lwd = 2, col= c("black","red","blue"),
legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_2"))
#Close Graphics Device
dev.off()
## Draw Plot 3
# Open Graphics Device - png file 480x480
png(filename = "plot3.png", width = 480, height = 480)
## Draw Plot 3
plot(power_data$DateTime, power_data$Sub_metering_1, type="n",
ylab="Energy sub metering", xlab="")
points(power_data$DateTime, power_data$Sub_metering_1, type="l", col="black")
points(power_data$DateTime, power_data$Sub_metering_2, type="l", col="red")
points(power_data$DateTime, power_data$Sub_metering_3, type="l", col="blue")
legend("topright", lwd = 2, col= c("black","red","blue"),
legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
#Close Graphics Device
dev.off()
## Draw Plot 4
par(mfrow= c(2,2))
with(power_data, {
plot(DateTime, Global_active_power, type="l",
ylab="Global Active Power (kilowatts)", xlab="")
plot(DateTime, Voltage, type="l",
ylab="Voltage", xlab="")
plot(DateTime, Sub_metering_1, type="n",
ylab="Energy sub metering", xlab="")
points(DateTime, Sub_metering_1, type="l", col="black")
points(DateTime, Sub_metering_2, type="l", col="red")
point(DateTime, Sub_metering_3, type="l", col="blue")
legend("topright", lwd = 2, col= c("black","red","blue"),
legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
plot(DateTime, Global_reactive_power, type="l",
ylab="Global_reactive_power", xlab="")
})
## Draw Plot 4
par(mfrow= c(2,2))
with(power_data, {
plot(DateTime, Global_active_power, type="l",
ylab="Global Active Power (kilowatts)", xlab="")
plot(DateTime, Voltage, type="l",
ylab="Voltage", xlab="")
plot(DateTime, Sub_metering_1, type="n",
ylab="Energy sub metering", xlab="")
points(DateTime, Sub_metering_1, type="l", col="black")
points(DateTime, Sub_metering_2, type="l", col="red")
points(DateTime, Sub_metering_3, type="l", col="blue")
legend("topright", lwd = 2, col= c("black","red","blue"),
legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
plot(DateTime, Global_reactive_power, type="l",
ylab="Global_reactive_power", xlab="")
})
par(mfrow= c(2,2))
with(power_data, {
plot(DateTime, Global_active_power, type="l",
ylab="Global Active Power (kilowatts)", xlab="")
plot(DateTime, Voltage, type="l",
ylab="Voltage", xlab="")
plot(DateTime, Sub_metering_1, type="n",
ylab="Energy sub metering", xlab="")
points(DateTime, Sub_metering_1, type="l", col="black")
points(DateTime, Sub_metering_2, type="l", col="red")
points(DateTime, Sub_metering_3, type="l", col="blue")
legend("topright", lwd = 2, col= c("black","red","blue"),
legend = c("Sub_metering_1", "Sub_metering_2",
"Sub_metering_3"), cex=0.80)
plot(DateTime, Global_reactive_power, type="l",
ylab="Global_reactive_power", xlab="")
})
par(mfrow= c(2,2))
with(power_data, {
plot(DateTime, Global_active_power, type="l",
ylab="Global Active Power (kilowatts)", xlab="")
plot(DateTime, Voltage, type="l",
ylab="Voltage", xlab="")
plot(DateTime, Sub_metering_1, type="n",
ylab="Energy sub metering", xlab="")
points(DateTime, Sub_metering_1, type="l", col="black")
points(DateTime, Sub_metering_2, type="l", col="red")
points(DateTime, Sub_metering_3, type="l", col="blue")
legend("topright", lwd = 2, col= c("black","red","blue"),
legend = c("Sub_metering_1", "Sub_metering_2",
"Sub_metering_3"), cex=0.95)
plot(DateTime, Global_reactive_power, type="l",
ylab="Global_reactive_power", xlab="")
})
par(mfrow= c(2,2))
with(power_data, {
plot(DateTime, Global_active_power, type="l",
ylab="Global Active Power (kilowatts)", xlab="")
plot(DateTime, Voltage, type="l",
ylab="Voltage", xlab="")
plot(DateTime, Sub_metering_1, type="n",
ylab="Energy sub metering", xlab="")
points(DateTime, Sub_metering_1, type="l", col="black")
points(DateTime, Sub_metering_2, type="l", col="red")
points(DateTime, Sub_metering_3, type="l", col="blue")
legend("topright", lwd = 1, col= c("black","red","blue"),
legend = c("Sub_metering_1", "Sub_metering_2",
"Sub_metering_3"), cex=0.95)
plot(DateTime, Global_reactive_power, type="l",
ylab="Global_reactive_power", xlab="")
})
?par
## Draw Plot 4
par(mfrow= c(2,2), mar= c(5,4,2,2))
with(power_data, {
plot(DateTime, Global_active_power, type="l",
ylab="Global Active Power (kilowatts)", xlab="")
plot(DateTime, Voltage, type="l",
ylab="Voltage", xlab="")
plot(DateTime, Sub_metering_1, type="n",
ylab="Energy sub metering", xlab="")
points(DateTime, Sub_metering_1, type="l", col="black")
points(DateTime, Sub_metering_2, type="l", col="red")
points(DateTime, Sub_metering_3, type="l", col="blue")
legend("topright", lwd = 2, col= c("black","red","blue"),
legend = c("Sub_metering_1", "Sub_metering_2",
"Sub_metering_3"), cex=0.95)
plot(DateTime, Global_reactive_power, type="l",
ylab="Global_reactive_power", xlab="")
})
## Draw Plot 4
par(mfrow= c(2,2), mar= c(5,4,2,2))
with(power_data, {
plot(DateTime, Global_active_power, type="l",
ylab="Global Active Power (kilowatts)", xlab="")
plot(DateTime, Voltage, type="l",
ylab="Voltage", xlab="datetime")
plot(DateTime, Sub_metering_1, type="n",
ylab="Energy sub metering", xlab="")
points(DateTime, Sub_metering_1, type="l", col="black")
points(DateTime, Sub_metering_2, type="l", col="red")
points(DateTime, Sub_metering_3, type="l", col="blue")
legend("topright", lwd = 2, col= c("black","red","blue"),
legend = c("Sub_metering_1", "Sub_metering_2",
"Sub_metering_3"), cex=0.95)
plot(DateTime, Global_reactive_power, type="l",
ylab="Global_reactive_power", xlab="datetime")
})
#Close Graphics Device
## Draw Plot 4
par(mfrow= c(2,2), mar= c(4,4,2,2))
with(power_data, {
plot(DateTime, Global_active_power, type="l",
ylab="Global Active Power (kilowatts)", xlab="")
plot(DateTime, Voltage, type="l",
ylab="Voltage", xlab="datetime")
plot(DateTime, Sub_metering_1, type="n",
ylab="Energy sub metering", xlab="")
points(DateTime, Sub_metering_1, type="l", col="black")
points(DateTime, Sub_metering_2, type="l", col="red")
points(DateTime, Sub_metering_3, type="l", col="blue")
legend("topright", lwd = 2, col= c("black","red","blue"),
legend = c("Sub_metering_1", "Sub_metering_2",
"Sub_metering_3"), cex=0.95)
plot(DateTime, Global_reactive_power, type="l",
ylab="Global_reactive_power", xlab="datetime")
})
?legend
## Draw Plot 4
par(mfrow= c(2,2), mar= c(4,4,2,2))
with(power_data, {
plot(DateTime, Global_active_power, type="l",
ylab="Global Active Power (kilowatts)", xlab="")
plot(DateTime, Voltage, type="l",
ylab="Voltage", xlab="datetime")
plot(DateTime, Sub_metering_1, type="n",
ylab="Energy sub metering", xlab="")
points(DateTime, Sub_metering_1, type="l", col="black")
points(DateTime, Sub_metering_2, type="l", col="red")
points(DateTime, Sub_metering_3, type="l", col="blue")
legend("topright", lwd = 2, bty = "n", col= c("black","red","blue"),
legend = c("Sub_metering_1", "Sub_metering_2",
"Sub_metering_3"), cex=0.95)
plot(DateTime, Global_reactive_power, type="l",
ylab="Global_reactive_power", xlab="datetime")
})
#Close Graphics Device
## Draw Plot 4
# Open Graphics Device - png file 480x480
png(filename = "plot4.png", width = 480, height = 480)
## Draw Plot 4
par(mfrow= c(2,2), mar= c(4,4,2,2))
with(power_data, {
plot(DateTime, Global_active_power, type="l",
ylab="Global Active Power (kilowatts)", xlab="")
plot(DateTime, Voltage, type="l",
ylab="Voltage", xlab="datetime")
plot(DateTime, Sub_metering_1, type="n",
ylab="Energy sub metering", xlab="")
points(DateTime, Sub_metering_1, type="l", col="black")
points(DateTime, Sub_metering_2, type="l", col="red")
points(DateTime, Sub_metering_3, type="l", col="blue")
legend("topright", lwd = 2, bty = "n", col= c("black","red","blue"),
legend = c("Sub_metering_1", "Sub_metering_2",
"Sub_metering_3"), cex=0.95)
plot(DateTime, Global_reactive_power, type="l",
ylab="Global_reactive_power", xlab="datetime")
})
#Close Graphics Device
dev.off()
?par
# Open Graphics Device - png file 480x480
png(filename = "plot4.png", width = 480, height = 480)
## Draw Plot 4
par(mfrow= c(2,2), mar= c(5,4,4,2))
with(power_data, {
plot(DateTime, Global_active_power, type="l",
ylab="Global Active Power (kilowatts)", xlab="")
plot(DateTime, Voltage, type="l",
ylab="Voltage", xlab="datetime")
plot(DateTime, Sub_metering_1, type="n",
ylab="Energy sub metering", xlab="")
points(DateTime, Sub_metering_1, type="l", col="black")
points(DateTime, Sub_metering_2, type="l", col="red")
points(DateTime, Sub_metering_3, type="l", col="blue")
legend("topright", lwd = 2, bty = "n", col= c("black","red","blue"),
legend = c("Sub_metering_1", "Sub_metering_2",
"Sub_metering_3"), cex=0.95)
plot(DateTime, Global_reactive_power, type="l",
ylab="Global_reactive_power", xlab="datetime")
})
#Close Graphics Device
dev.off()
png(filename = "plot4.png", width = 480, height = 480)
## Draw Plot 4
par(mfrow= c(2,2))
with(power_data, {
plot(DateTime, Global_active_power, type="l",
ylab="Global Active Power (kilowatts)", xlab="")
plot(DateTime, Voltage, type="l",
ylab="Voltage", xlab="datetime")
plot(DateTime, Sub_metering_1, type="n",
ylab="Energy sub metering", xlab="")
points(DateTime, Sub_metering_1, type="l", col="black")
points(DateTime, Sub_metering_2, type="l", col="red")
points(DateTime, Sub_metering_3, type="l", col="blue")
legend("topright", lwd = 2, bty = "n", col= c("black","red","blue"),
legend = c("Sub_metering_1", "Sub_metering_2",
"Sub_metering_3"), cex=0.95)
plot(DateTime, Global_reactive_power, type="l",
ylab="Global_reactive_power", xlab="datetime")
})
#Close Graphics Device
dev.off()
## Draw Plot 4
# Open Graphics Device - png file 480x480
png(filename = "plot4.png", width = 480, height = 480)
## Draw Plot 4
par(mfrow= c(2,2))
with(power_data, {
## Plot 1 - global active power
plot(DateTime, Global_active_power, type="l",
ylab="Global Active Power", xlab="")
## Plot 2 - voltage
plot(DateTime, Voltage, type="l",
ylab="Voltage", xlab="datetime")
## Plot 3 - Energy sub metering
plot(DateTime, Sub_metering_1, type="n",
ylab="Energy sub metering", xlab="")
points(DateTime, Sub_metering_1, type="l", col="black")
points(DateTime, Sub_metering_2, type="l", col="red")
points(DateTime, Sub_metering_3, type="l", col="blue")
legend("topright", lwd = 2, bty = "n", col= c("black","red","blue"),
legend = c("Sub_metering_1", "Sub_metering_2",
"Sub_metering_3"), cex=0.95)
## Plot 4 - Global reactive power
plot(DateTime, Global_reactive_power, type="l",
ylab="Global_reactive_power", xlab="datetime")
})
#Close Graphics Device
dev.off()
## Exploratory Analysis
## Project #1
## Plot1
## ---------------------------------------
## File downloaded and unzipped in ./data directory
## - separated by ';'
## ---------------------------------------
file <- "./data/household_power_consumption.txt"
power_data <- read.table(file, header=TRUE, sep=";", na.strings="?")
## subset the data needed - in DD/MM/YYYY format
power_data <- power_data[power_data$Date %in% c("1/2/2007","2/2/2007"),]
## Merge Date and Time columns to an convert into Date classes
power_data$DateTime <- paste(power_data$Date, power_data$Time)
power_data$DateTime <- strptime(power_data$DateTime, format = "%d/%m/%Y %H:%M:%S")
# Open Graphics Device - png file 480x480
png(filename = "plot1.png", width = 480, height = 480)
## Draw histogram - Plot 1
## - use hist: Color Red, Title, X-axis title
hist(power_data$Global_active_power, col="red", main="Global Active Power",
xlab="Global Active Power (kilowatts)")
#Close Graphics Device
dev.off()
## Exploratory Analysis
## Project #1
## Plot 2
## ---------------------------------------
## File downloaded and unzipped in ./data directory
## - separated by ';'
## ---------------------------------------
file <- "./data/household_power_consumption.txt"
power_data <- read.table(file, header=TRUE, sep=";", na.strings="?")
## subset the data needed - in DD/MM/YYYY format
power_data <- power_data[power_data$Date %in% c("1/2/2007","2/2/2007"),]
## Merge Date and Time columns to an convert into Date classes
power_data$DateTime <- paste(power_data$Date, power_data$Time)
power_data$DateTime <- strptime(power_data$DateTime, format = "%d/%m/%Y %H:%M:%S")
## Draw Plot 2
# Open Graphics Device - png file 480x480
png(filename = "plot2.png", width = 480, height = 480)
## Draw Plot 2
##   use plot, line mode, y-axis title, no x-axis title
plot(power_data$DateTime, power_data$Global_active_power, type="l",
ylab="Global Active Power (kilowatts)", xlab="")
#Close Graphics Device
dev.off()
## Exploratory Analysis
## Project #1
## Plot 3
## ---------------------------------------
## File downloaded and unzipped in ./data directory
## - separated by ';'
## ---------------------------------------
file <- "./data/household_power_consumption.txt"
power_data <- read.table(file, header=TRUE, sep=";", na.strings="?")
## subset the data needed - in DD/MM/YYYY format
power_data <- power_data[power_data$Date %in% c("1/2/2007","2/2/2007"),]
## Merge Date and Time columns to an convert into Date classes
power_data$DateTime <- paste(power_data$Date, power_data$Time)
power_data$DateTime <- strptime(power_data$DateTime, format = "%d/%m/%Y %H:%M:%S")
## Draw Plot 3
# Open Graphics Device - png file 480x480
png(filename = "plot3.png", width = 480, height = 480)
## Draw Plot 3
##   use Plot, then add 3 lines for sub metering with colors
##   add legend matching lines/colors
plot(power_data$DateTime, power_data$Sub_metering_1, type="n",
ylab="Energy sub metering", xlab="")
points(power_data$DateTime, power_data$Sub_metering_1, type="l", col="black")
points(power_data$DateTime, power_data$Sub_metering_2, type="l", col="red")
points(power_data$DateTime, power_data$Sub_metering_3, type="l", col="blue")
legend("topright", lwd = 2, col= c("black","red","blue"),
legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
#Close Graphics Device
dev.off()
## Exploratory Analysis
## Project #1
## Plot 4
## ---------------------------------------
## File downloaded and unzipped in ./data directory
## - separated by ';'
## ---------------------------------------
file <- "./data/household_power_consumption.txt"
power_data <- read.table(file, header=TRUE, sep=";", na.strings="?")
## subset the data needed - in DD/MM/YYYY format
power_data <- power_data[power_data$Date %in% c("1/2/2007","2/2/2007"),]
## Merge Date and Time columns to an convert into Date classes
power_data$DateTime <- paste(power_data$Date, power_data$Time)
power_data$DateTime <- strptime(power_data$DateTime, format = "%d/%m/%Y %H:%M:%S")
## Draw Plot 4
# Open Graphics Device - png file 480x480
png(filename = "plot4.png", width = 480, height = 480)
## Draw Plot 4
##    4 graphs, 2x2
par(mfrow= c(2,2))
with(power_data, {
## Plot 1 - global active power
plot(DateTime, Global_active_power, type="l",
ylab="Global Active Power", xlab="")
## Plot 2 - voltage
plot(DateTime, Voltage, type="l",
ylab="Voltage", xlab="datetime")
## Plot 3 - Energy sub metering
plot(DateTime, Sub_metering_1, type="n",
ylab="Energy sub metering", xlab="")
points(DateTime, Sub_metering_1, type="l", col="black")
points(DateTime, Sub_metering_2, type="l", col="red")
points(DateTime, Sub_metering_3, type="l", col="blue")
legend("topright", lwd = 2, bty = "n", col= c("black","red","blue"),
legend = c("Sub_metering_1", "Sub_metering_2",
"Sub_metering_3"), cex=0.95)
## Plot 4 - Global reactive power
plot(DateTime, Global_reactive_power, type="l",
ylab="Global_reactive_power", xlab="datetime")
})
#Close Graphics Device
dev.off()
remove(power_data)
remove(file)
remove(Url)
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
?lines
?axis
?text
?panel
??panel
library(lattice)
library(datasets)
data(airquality)
p <- xyplot(Ozone ~ Wind | factor(Month), data = airquality)
print(p)
qplot(Wind, Ozone, data = airquality)
library(ggplot2)
qplot(Wind, Ozone, data = airquality)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
g <- ggplot(movies, aes(votes, rating))
print(g)
qplot(votes, rating, data = movies)
qplot(votes, rating, data = movies, smooth = "loess")
qplot(votes, rating, data = movies) + geom_smooth()
qplot(votes, rating, data = movies) + stats_smooth("loess")
setwd("~/Documents/dev/R/class/DA_Project2")
datadir <- "../data/exdata-data-NEI_data/"
NEIfile <- "summarySCC_PM25.rds"
SCCfile <- "Source_Classification_Code.rds"
NEI_data <- readRDS(paste(datadir,NEIfile, sep=""))
SCC_data <- readRDS(paste(datadir,SCCfile, sep=""))
summary(SCC_data)
cc_data <- SCC_data[grepl("Coal", SCC_data$Sector), ]
cc_data
cc_data <- SCC_data[grepl("Coal", SCC_data$EI.Sector), ]
cc_data
