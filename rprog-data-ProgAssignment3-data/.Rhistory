source('~/.active-rstudio-document')
pollutantmean("specdata", "sulfate", 1:10)
?dir
source('~/.active-rstudio-document')
pollutantmean("specdata", "sulfate", 1:10)
source('~/.active-rstudio-document')
pollutantmean("specdata", "sulfate", 1:10)
dir
directory <- "specdata"
dir(directory)
files <- paste(directory, "/", dir(directory, sep="")
)
files <- paste(directory, "/", dir(directory), sep="")
files
source('~/Documents/dev/R/class/pollutantmean.R')
pollutantmean("specdata", "sulfate", 1:10)
source('~/.active-rstudio-document')
pollutantmean("specdata", "sulfate", 1:10)
source('~/.active-rstudio-document')
pollutantmean("specdata", "sulfate", 1:10)
source('~/.active-rstudio-document')
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "nitrate", 23)
source('~/Documents/dev/R/class/pollutantmean.R')
pollutantmean("specdata", "nitrate", 23)
tables <- do.call(rbind, lapply(files, read.csv))
data <- tables[which(tables[, "ID"] %in% id), ]
id <- 1:2
data <- tables[which(tables[, "ID"] %in% id), ]
data
?sum
summary(data)
?group
?count
?sum
source('~/Documents/dev/R/class/complete.R')
complete("specdata", 1)
head(data)
is.na(head(data))
is.na(head(data[,2:3]))
!is.na(head(data[,2:3]))
!is.na(head(data[,2:3]),20)
!is.na(head(data[,2:3], 10))
!is.na(head(data[,2:3], 20))
!is.na(head(data[,2:3], 100))
!is.na(head(data[,2:3], 1200))
sum(!is.na(head(data[,2:3], 1200)))
i <- 1
dset <- read.csv(paste(directory, "/", i, ".csv", sep=""))
dset <- read.csv(paste(directory, "/", sprintf("%03d",i), ".csv", sep=""))
class(dset)
dset
?complete.cases
complete.cases(dset)
dset
complete.cases(dset)
sum(complete.cases(dset))
?rebind
?rbind
comp <- sum(complete.cases(dset))
comp
rebind(data.frame(id=i, nobs=comp))
rbind(data.frame(id=i, nobs=comp))
source('~/Documents/dev/R/class/complete.R')
complete("specdata", 1)
source('~/.active-rstudio-document')
complete("specdata", 1)
complete("specdata", c(2, 4, 8, 10, 12))
source('~/Documents/dev/R/class/complete.R')
source('~/Documents/dev/R/class/complete.R')
complete("specdata", c(2, 4, 8, 10, 12))
source('~/Documents/dev/R/class/complete.R')
complete("specdata", c(2, 4, 8, 10, 12))
complete("specdata", 30:25)
complete("specdata", 3)
source('~/Documents/dev/R/class/complete.R')
complete("specdata", 3)
complete("specdata", 30:25)
?cor
files <- paste(directory, "/", dir(directory), sep="")
size(files)
length(files)
files[i]
dset <- read.csv(files[i])
dset
threshold <- 100
comp <- sum(complete.cases(dset))
comp > threshold
dset[,2]
cor(dset[,2],dset[,3], na.rm=TRUE)
cor(dset[,2],dset[,3], use="complete.obs")
cr <- corr("specdata", 150)
source('~/Documents/dev/R/class/corr.R')
cr <- corr("specdata", 150)
source('~/.active-rstudio-document')
cr <- corr("specdata", 150)
cr
threshold <- 150
files <- paste(directory, "/", dir(directory), sep="")
first <- TRUE
for (i in length(files)) {
dset <- read.csv(files[i])
comp <- sum(complete.cases(dset))
if (comp > threshold) {
mycor <- cor(dset[,2],dset[,3], use="complete.obs")
if (first) {
result <- mycor
first <- FALSE
}
else {
result <- c(result, mycor)
}
}
}
threshold <- 100
dset <- read.csv(files[i])
+ comp <- sum(complete.cases(dset))
comp <- sum(complete.cases(dset))
dset
cr <- corr("specdata")
cr
source('~/Documents/dev/R/class/corr.R')
cr <- corr("specdata")
cr
source('~/.active-rstudio-document')
cr <- corr("specdata")
head(cr)
length(cr)
summary(cr)
cr <- corr("specdata", 5000)
source('~/Documents/dev/R/class/corr.R')
cr <- corr("specdata", 5000)
cr
length(cr)
cr <- corr("specdata", 400)
head(cr)
summary(cr)
source('~/.active-rstudio-document')
cr <- corr("specdata", 400)
head(cr)
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
quit()
library(datasets)
data(iris)
?iris
summary(iris)
rowMeans(iris[,1:4])
apply(iris, 1, mean)
apply(iris[,1:4],2,mean)
apply(iris[,1:4],1,mean)
summary(iris)
class(iris)
s <- split(iris, iris$Species)
summary(s)
s[1,]
dim(s)
dims(s)
lapply(s, function(x) colMeans(x[, c("Sepal.Length")]))
lapply(s, function(x) colMeans(x[, c("Sepal.Length", "Sepal.Width")]))
remove(data)
remove(dset)
remove(tables)
library(datasets)
data(mtcars)
?mtcars
mean(mtcars$mpg, mtcars$cyl)
tapply(mtcars$mpg, mtcars$cyl, mean)
sapply(mtcars, cyl, mean)
apply(mtcars, 2, mean)
s <- split(mtcars, mtcars$cyl)
lapply(s, function(x) colMeans(x[,c("hp",'wt')]))
209.214286 - 82.636364
debug(ls)
ls
source('~/Documents/dev/R/class/makeVector.R')
source('~/Documents/dev/R/class/cachemean.R')
source('~/Documents/dev/R/class/cachemean.R')
source('~/Documents/dev/R/class/makeVector.R')
exit
q
q
exit
q
quit
quit()
exit
exit()
?
help
help
exit
help
exit
source('~/Documents/dev/R/class/makeCacheMatrix.R')
source('~/Documents/dev/R/class/cacheSolve.R')
makeCacheMatrix(matrix(c(1,2,3,4), nrows=2, ncols=2))
am <- makeCacheMatrix(matrix(c(1,2,3,4), nrows=2, ncols=2))
class am
class(am)
source('~/Documents/dev/R/class/cachematrix.R')
am <- makeCacheMatrix(matrix(c(1,2,3,4), nrows=2, ncols=2))
class(am)
am.get()
am$get
am$get()
am <- makeCacheMatrix(matrix(c(1,2,3,4), nrow=2, ncol=2))
am
am$get
am$get()
am$getinverse
am$getinverse()
cacheSolve(am)
cacheSolve(am)
set.seed(1)
rpois(5,2)
set.seed(1)
rpois(5,2)
?rpois
setwd("~/Documents/dev/R/class/rprog-data-ProgAssignment3-data")
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
dset <- data[, c(7,2,11,17,23)]
dset[dset=="Not Available"]<-NA
dset <- na.omit(dset)
sset <- dset[order(dset[],1], as.numeric(dset[,3]), dset[,2]),]
sset <- dset[order(dset[,1], as.numeric(dset[,3]), dset[,2]),]
spset <- split(sset,sset$State)
spset
class(spset)
summary(spset)
class(spset)
length(spset)
spset[[1]]
?subset
s1 <- spset[[1]]
class(s1)
s1[1,1]
s1[1, c(1,2)]
$dataframe
?dataframe
source('~/Documents/dev/R/class/rprog-data-ProgAssignment3-data/rankall.R')
head(rankall("heart attack", 20), 10)
for (i in 1:length(spset))
{}
i
s <- spset[[1]]
st <- s[1,1]
h <- s[1,2]
source('~/Documents/dev/R/class/rprog-data-ProgAssignment3-data/rankall.R')
head(rankall("heart attack", 20), 10)
tail(rankall("pneumonia", "worst"), 3)
tail(rankall("heart failure"),10)
s
sq
s1
s <- spset[[spset$State="TN"]]
s <- spset[[34]]
s
s <- spset[[44]]
s
s <- spset[[45]]
s
sset <- dset[order(dset[,1], as.numeric(dset[,4]), dset[,2]),]
spset <- split(sset,sset$State)
s <- spset[[45]]
s
source('~/Documents/dev/R/class/rprog-data-ProgAssignment3-data/rankall.R')
submit()
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript3.R")
submit()
submit()
submit()
submit()
rankall("heart failure", 10)
